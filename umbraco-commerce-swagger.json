{
  "openapi": "3.0.4",
  "info": {
    "title": "Umbraco Commerce Management API",
    "description": "Describes the Umbraco Commerce Management API, the backoffice headless API for Umbraco Commerce.",
    "version": "Latest"
  },
  "paths": {
    "/umbraco/commerce/management/api/v1/activity-logs": {
      "get": {
        "tags": [
          "Activity Log"
        ],
        "operationId": "getActivityLogEntriesByStoreId",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PagedActivityLogEntryDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/activity-logs/{entityType}/{entityId}": {
      "get": {
        "tags": [
          "Activity Log"
        ],
        "operationId": "getActivityLogEntriesByEntityIdAndType",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PagedActivityLogEntryDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/analytics/abandoned-cart-conversion-rates": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "operationId": "getAbandonedCartConversionRates",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AnalyticsWidgetRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AnalyticsAbandonedCartConversionRatesDataDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/analytics/average-order-value": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "operationId": "getAverageOrderValue",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AnalyticsWidgetRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AnalyticsAverageOrderValueDataDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/analytics/cart-conversion-rates": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "operationId": "getCartConversionRates",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AnalyticsWidgetRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AnalyticsCartConversionRatesDataDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/analytics/repeat-customer-rates": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "operationId": "getRepeatCustomerRates",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AnalyticsWidgetRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AnalyticsRepeatCustomerRatesDataDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/analytics/top-selling-products": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "operationId": "getTopSellingProducts",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AnalyticsWidgetRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AnalyticsProductSalesDataDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/analytics/total-orders": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "operationId": "getTotalOrders",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AnalyticsWidgetRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AnalyticsTotalOrdersDataDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/analytics/total-revenue": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "operationId": "getTotalRevenue",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AnalyticsWidgetRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AnalyticsTotalRevenueDataDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/carts": {
      "post": {
        "tags": [
          "Cart"
        ],
        "operationId": "createCart",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateCartRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Cart"
        ],
        "operationId": "getCarts",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter the returned list of items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "Return all results": {
                "value": " "
              },
              "Return items in a given category": {
                "value": "category:order"
              }
            }
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PagedOrderDto"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/carts/{cartId}": {
      "delete": {
        "tags": [
          "Cart"
        ],
        "operationId": "deleteCartById",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Cart"
        ],
        "operationId": "getCartById",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderDto"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Cart"
        ],
        "operationId": "updateCartById",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCartRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderDto"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/carts/{cartId}/calculate": {
      "patch": {
        "tags": [
          "Cart"
        ],
        "operationId": "calculateCartById",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCartRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderDto"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/carts/{cartId}/calculate-payment-methods": {
      "patch": {
        "tags": [
          "Cart"
        ],
        "operationId": "calculateCartPaymentMethodsById",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCartRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentMethodWithFeeDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/carts/{cartId}/calculate-shipping-methods": {
      "patch": {
        "tags": [
          "Cart"
        ],
        "operationId": "calculateCartShippingMethodsById",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCartRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ShippingMethodWithRatesDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/carts/{cartId}/finalize": {
      "post": {
        "tags": [
          "Cart"
        ],
        "operationId": "finalizeCart",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/FinalizeCartRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/carts/{cartId}/payment-link": {
      "post": {
        "tags": [
          "Cart"
        ],
        "operationId": "generateCartPaymentLinkById",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GenerateCartPaymentLinkRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CartPaymentLinkDto"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/carts/{cartId}/process-abandoned": {
      "put": {
        "tags": [
          "Cart"
        ],
        "operationId": "processAbandonedCart",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderDto"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/carts/advanced-filters": {
      "get": {
        "tags": [
          "Cart"
        ],
        "operationId": "getCartAdvancedFilters",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PropertyDefinitionGroupDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/content/{unique}/store": {
      "get": {
        "tags": [
          "Content"
        ],
        "operationId": "getStoreByContentNodeId",
        "parameters": [
          {
            "name": "unique",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/StoreBasicDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/countries": {
      "post": {
        "tags": [
          "Country"
        ],
        "operationId": "createCountry",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateCountryRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CountryDto"
                    },
                    {
                      "$ref": "#/components/schemas/CountryNamedReferenceDto"
                    },
                    {
                      "$ref": "#/components/schemas/CountryReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Country"
        ],
        "operationId": "getCountries",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/CountryDto"
                      },
                      {
                        "$ref": "#/components/schemas/CountryNamedReferenceDto"
                      },
                      {
                        "$ref": "#/components/schemas/CountryReferenceDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/countries/{countryIdOrCode}": {
      "delete": {
        "tags": [
          "Country"
        ],
        "operationId": "deleteCountryByIdOrCode",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CountryReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Country"
        ],
        "operationId": "getCountryByIdOrCode",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CountryDto"
                    },
                    {
                      "$ref": "#/components/schemas/CountryNamedReferenceDto"
                    },
                    {
                      "$ref": "#/components/schemas/CountryReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Country"
        ],
        "operationId": "updateCountryByIdOrCode",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCountryRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CountryDto"
                    },
                    {
                      "$ref": "#/components/schemas/CountryNamedReferenceDto"
                    },
                    {
                      "$ref": "#/components/schemas/CountryReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/countries/{countryIdOrCode}/regions": {
      "post": {
        "tags": [
          "Country"
        ],
        "operationId": "createRegion",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateRegionRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/RegionDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Country"
        ],
        "operationId": "getRegions",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/RegionDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/countries/{countryIdOrCode}/regions/{regionIdOrCode}": {
      "delete": {
        "tags": [
          "Country"
        ],
        "operationId": "deleteRegionByIdOrCode",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "regionIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/RegionReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Country"
        ],
        "operationId": "getRegionByIdOrCode",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "regionIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/RegionDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Country"
        ],
        "operationId": "updateRegionByIdOrCode",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "regionIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRegionRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/RegionDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/countries/{countryIdOrCode}/regions/auto": {
      "post": {
        "tags": [
          "Country"
        ],
        "operationId": "autoCreateRegions",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/RegionDto"
                      },
                      {
                        "$ref": "#/components/schemas/RegionNamedReferenceDto"
                      },
                      {
                        "$ref": "#/components/schemas/RegionReferenceDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/countries/{countryIdOrCode}/regions/scaffold": {
      "post": {
        "tags": [
          "Country"
        ],
        "operationId": "createRegionScaffold",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/RegionDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/countries/{countryIdOrCode}/regions/sort": {
      "put": {
        "tags": [
          "Country"
        ],
        "operationId": "sortRegions",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/countries/auto": {
      "post": {
        "tags": [
          "Country"
        ],
        "operationId": "autoCreateCountriesAndRegions",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AutoCreateCountriesAndRegionsRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/CountryDto"
                      },
                      {
                        "$ref": "#/components/schemas/CountryNamedReferenceDto"
                      },
                      {
                        "$ref": "#/components/schemas/CountryReferenceDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/countries/iso3166": {
      "get": {
        "tags": [
          "Country"
        ],
        "operationId": "getIso3166Countries",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/Iso3166CountryDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/countries/scaffold": {
      "post": {
        "tags": [
          "Country"
        ],
        "operationId": "createCountryScaffold",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ScaffoldCountryRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CountryDto"
                    },
                    {
                      "$ref": "#/components/schemas/CountryNamedReferenceDto"
                    },
                    {
                      "$ref": "#/components/schemas/CountryReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/countries/sort": {
      "put": {
        "tags": [
          "Country"
        ],
        "operationId": "sortCountries",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/currencies": {
      "post": {
        "tags": [
          "Currency"
        ],
        "operationId": "createCurrency",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateCurrencyRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CurrencyDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Currency"
        ],
        "operationId": "getCurrencies",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/CurrencyDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/currencies/{currencyIdOrCode}": {
      "delete": {
        "tags": [
          "Currency"
        ],
        "operationId": "deleteCurrencyByIdOrCode",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currencyIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CurrencyReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Currency"
        ],
        "operationId": "getCurrencyByIdOrCode",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currencyIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CurrencyDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Currency"
        ],
        "operationId": "updateCurrencyByIdOrCode",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currencyIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCurrencyRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CurrencyDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/currencies/scaffold": {
      "post": {
        "tags": [
          "Currency"
        ],
        "operationId": "createCurrencyScaffold",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CurrencyDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/currencies/sort": {
      "put": {
        "tags": [
          "Currency"
        ],
        "operationId": "sortCurrencies",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/customers/{customerReferenceOrEmail}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "getCustomerByReferenceOrEmail",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerReferenceOrEmail",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CustomerDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/customers/{customerReferenceOrEmail}/orders": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "getCustomerOrderHistoryByReferenceOrEmail",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerReferenceOrEmail",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/OrderDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/dictionary-items": {
      "post": {
        "tags": [
          "Dictionary"
        ],
        "operationId": "createDictionaryItem",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateDictionaryItemRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/DictionaryItemDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/dictionary-items/{dictionaryItemId}": {
      "put": {
        "tags": [
          "Dictionary"
        ],
        "operationId": "updateDictionaryItemById",
        "parameters": [
          {
            "name": "dictionaryItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateDictionaryItemRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/DictionaryItemDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/dictionary-items/{dictionaryItemKey}": {
      "get": {
        "tags": [
          "Dictionary"
        ],
        "operationId": "getDictionaryItemByKey",
        "parameters": [
          {
            "name": "dictionaryItemKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/DictionaryItemDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/discount-reward-providers": {
      "get": {
        "tags": [
          "Discount Provider"
        ],
        "operationId": "getDiscountRewardProviders",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/DiscountRewardProviderDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/discount-rule-providers": {
      "get": {
        "tags": [
          "Discount Provider"
        ],
        "operationId": "getDiscountRuleProviders",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/DiscountRuleProviderDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/discounts": {
      "post": {
        "tags": [
          "Discount"
        ],
        "operationId": "createDiscount",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateDiscountRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/DiscountDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Discount"
        ],
        "operationId": "getDiscounts",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter the returned list of items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "Return all results": {
                "value": " "
              },
              "Return items in a given category": {
                "value": "category:order"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/DiscountDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/discounts/{discountIdOrAlias}": {
      "delete": {
        "tags": [
          "Discount"
        ],
        "operationId": "deleteDiscountByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discountIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/DiscountReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Discount"
        ],
        "operationId": "getDiscountByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discountIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/DiscountDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Discount"
        ],
        "operationId": "updateDiscountByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discountIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateDiscountRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/DiscountDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/discounts/scaffold": {
      "post": {
        "tags": [
          "Discount"
        ],
        "operationId": "createDiscountScaffold",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/DiscountDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/discounts/sort": {
      "put": {
        "tags": [
          "Discount"
        ],
        "operationId": "sortDiscounts",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/email-templates": {
      "post": {
        "tags": [
          "Email Template"
        ],
        "operationId": "createEmailTemplate",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateEmailTemplateRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmailTemplateDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Email Template"
        ],
        "operationId": "getEmailTemplates",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter the returned list of items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "Return all results": {
                "value": " "
              },
              "Return items in a given category": {
                "value": "category:order"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailTemplateDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/email-templates/{emailTemplateIdOrAlias}": {
      "delete": {
        "tags": [
          "Email Template"
        ],
        "operationId": "deleteEmailTemplateByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailTemplateIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmailTemplateReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Email Template"
        ],
        "operationId": "getEmailTemplateByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailTemplateIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmailTemplateDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Email Template"
        ],
        "operationId": "updateEmailTemplateByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailTemplateIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateEmailTemplateRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmailTemplateDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/email-templates/{emailTemplateIdOrAlias}/send": {
      "post": {
        "tags": [
          "Email Template"
        ],
        "operationId": "sendEmailTemplateByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailTemplateIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SendEmailTemplateRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/email-templates/scaffold": {
      "post": {
        "tags": [
          "Email Template"
        ],
        "operationId": "createEmailTemplateScaffold",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmailTemplateDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/email-templates/sort": {
      "put": {
        "tags": [
          "Email Template"
        ],
        "operationId": "sortEmailTemplates",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/export-templates": {
      "post": {
        "tags": [
          "Export Template"
        ],
        "operationId": "createExportTemplate",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateExportTemplateRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ExportTemplateDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Export Template"
        ],
        "operationId": "getExportTemplates",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter the returned list of items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "Return all results": {
                "value": " "
              },
              "Return items in a given category": {
                "value": "category:order"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ExportTemplateDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/export-templates/{exportTemplateIdOrAlias}": {
      "delete": {
        "tags": [
          "Export Template"
        ],
        "operationId": "deleteExportTemplateByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exportTemplateIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ExportTemplateReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Export Template"
        ],
        "operationId": "getExportTemplateByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exportTemplateIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ExportTemplateDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Export Template"
        ],
        "operationId": "updateExportTemplateByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exportTemplateIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateExportTemplateRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ExportTemplateDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/export-templates/export": {
      "post": {
        "tags": [
          "Export Template"
        ],
        "operationId": "export",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ExportRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/octet-stream": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "binary"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/export-templates/scaffold": {
      "post": {
        "tags": [
          "Export Template"
        ],
        "operationId": "createExportTemplateScaffold",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ExportTemplateDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/export-templates/sort": {
      "put": {
        "tags": [
          "Export Template"
        ],
        "operationId": "sortExportTemplates",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/gift-cards": {
      "post": {
        "tags": [
          "Gift Card"
        ],
        "operationId": "createGiftCard",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateGiftCardRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GiftCardDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Gift Card"
        ],
        "operationId": "getGiftCards",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter the returned list of items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "Return all results": {
                "value": " "
              },
              "Return items in a given category": {
                "value": "category:order"
              }
            }
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PagedGiftCardDto"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/gift-cards/{giftCardIdOrCode}": {
      "delete": {
        "tags": [
          "Gift Card"
        ],
        "operationId": "deleteGiftCardByIdOrCode",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "giftCardIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GiftCardReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Gift Card"
        ],
        "operationId": "getGiftCardByIdOrCode",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "giftCardIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GiftCardDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Gift Card"
        ],
        "operationId": "updateGiftCardByIdOrCode",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "giftCardIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateGiftCardRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GiftCardDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/gift-cards/generate-code": {
      "get": {
        "tags": [
          "Gift Card"
        ],
        "operationId": "generateGiftCardCode",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/gift-cards/scaffold": {
      "post": {
        "tags": [
          "Gift Card"
        ],
        "operationId": "createGiftCardScaffold",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ScaffoldGiftCardRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GiftCardDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/locations": {
      "post": {
        "tags": [
          "Location"
        ],
        "operationId": "createLocation",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateLocationRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/LocationDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Location"
        ],
        "operationId": "getLocations",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/LocationDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/locations/{locationIdOrAlias}": {
      "delete": {
        "tags": [
          "Location"
        ],
        "operationId": "deleteLocationByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/LocationReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Location"
        ],
        "operationId": "getLocationByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/LocationDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Location"
        ],
        "operationId": "updateLocationByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateLocationRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/LocationDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/locations/scaffold": {
      "post": {
        "tags": [
          "Location"
        ],
        "operationId": "createLocationScaffold",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/LocationDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/locations/sort": {
      "put": {
        "tags": [
          "Location"
        ],
        "operationId": "sortLocations",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/order-statuses": {
      "post": {
        "tags": [
          "Order Status"
        ],
        "operationId": "createOrderStatus",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateOrderStatusRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderStatusDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Order Status"
        ],
        "operationId": "getOrderStatuses",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/OrderStatusDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/order-statuses/{orderStatusIdOrAlias}": {
      "delete": {
        "tags": [
          "Order Status"
        ],
        "operationId": "deleteOrderStatusByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderStatusIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderStatusReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Order Status"
        ],
        "operationId": "getOrderStatusByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderStatusIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderStatusDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Order Status"
        ],
        "operationId": "updateOrderStatusByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderStatusIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateOrderStatusRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderStatusDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/order-statuses/scaffold": {
      "post": {
        "tags": [
          "Order Status"
        ],
        "operationId": "createOrderStatusScaffold",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderStatusDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/order-statuses/sort": {
      "put": {
        "tags": [
          "Order Status"
        ],
        "operationId": "sortOrderStatuses",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/orders": {
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "getOrders",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter the returned list of items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "Return all results": {
                "value": " "
              },
              "Return items in a given category": {
                "value": "category:order"
              }
            }
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PagedOrderDto"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/orders/{orderId}": {
      "delete": {
        "tags": [
          "Order"
        ],
        "operationId": "deleteOrderById",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "getOrderById",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderDto"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Order"
        ],
        "operationId": "updateOrderById",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateOrderRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderDto"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/orders/{orderId}/cancel-payment": {
      "put": {
        "tags": [
          "Order"
        ],
        "operationId": "cancelOrderPaymentById",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderDto"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/orders/{orderId}/capture-payment": {
      "put": {
        "tags": [
          "Order"
        ],
        "operationId": "captureOrderPaymentById",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderDto"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/orders/{orderId}/refund-payment": {
      "put": {
        "tags": [
          "Order"
        ],
        "operationId": "refundOrderPaymentById",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderDto"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "deprecated": true,
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v2/orders/{orderId}/refund-payment": {
      "put": {
        "tags": [
          "Order"
        ],
        "operationId": "refundOrderPaymentByIdV2",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/OrderRefundRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderDto"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/orders/advanced-filters": {
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "getOrderAdvancedFilters",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PropertyDefinitionGroupDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/payment-methods": {
      "post": {
        "tags": [
          "Payment Method"
        ],
        "operationId": "createPaymentMethod",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreatePaymentMethodRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PaymentMethodDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Payment Method"
        ],
        "operationId": "getPaymentMethods",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentMethodDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/payment-methods/{paymentMethodIdOrAlias}": {
      "delete": {
        "tags": [
          "Payment Method"
        ],
        "operationId": "deletePaymentMethodByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentMethodIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PaymentMethodReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Payment Method"
        ],
        "operationId": "getPaymentMethodByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentMethodIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PaymentMethodDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Payment Method"
        ],
        "operationId": "updatePaymentMethodByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentMethodIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdatePaymentMethodRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PaymentMethodDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/payment-methods/scaffold": {
      "post": {
        "tags": [
          "Payment Method"
        ],
        "operationId": "createPaymentMethodScaffold",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ScaffoldPaymentMethodRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PaymentMethodDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/payment-methods/sort": {
      "put": {
        "tags": [
          "Payment Method"
        ],
        "operationId": "sortPaymentMethods",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/payment-providers": {
      "get": {
        "tags": [
          "Payment Provider"
        ],
        "operationId": "getPaymentProviders",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentProviderDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/payment-providers/{paymentProviderAlias}": {
      "get": {
        "tags": [
          "Payment Provider"
        ],
        "operationId": "getPaymentProviderByAlias",
        "parameters": [
          {
            "name": "paymentProviderAlias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PaymentProviderDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/print-templates": {
      "post": {
        "tags": [
          "Print Template"
        ],
        "operationId": "createPrintTemplate",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreatePrintTemplateRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PrintTemplateDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Print Template"
        ],
        "operationId": "getPrintTemplates",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter the returned list of items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "Return all results": {
                "value": " "
              },
              "Return items in a given category": {
                "value": "category:order"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PrintTemplateDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/print-templates/{printTemplateIdOrAlias}": {
      "delete": {
        "tags": [
          "Print Template"
        ],
        "operationId": "deletePrintTemplateByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "printTemplateIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PrintTemplateReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Print Template"
        ],
        "operationId": "getPrintTemplateByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "printTemplateIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PrintTemplateDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Print Template"
        ],
        "operationId": "updatePrintTemplateByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "printTemplateIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdatePrintTemplateRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PrintTemplateDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/print-templates/render": {
      "post": {
        "tags": [
          "Print Template"
        ],
        "operationId": "render",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RenderRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/print-templates/scaffold": {
      "post": {
        "tags": [
          "Print Template"
        ],
        "operationId": "createPrintTemplateScaffold",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PrintTemplateDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/print-templates/sort": {
      "put": {
        "tags": [
          "Print Template"
        ],
        "operationId": "sortPrintTemplates",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/product-attribute-presets": {
      "post": {
        "tags": [
          "Product Attribute Preset"
        ],
        "operationId": "createProductAttributePreset",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateProductAttributePresetRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProductAttributePresetDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Product Attribute Preset"
        ],
        "operationId": "getProductAttributePresets",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ProductAttributePresetDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/product-attribute-presets/{productAttributePresetIdOrAlias}": {
      "delete": {
        "tags": [
          "Product Attribute Preset"
        ],
        "operationId": "deleteProductAttributePresetByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productAttributePresetIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProductAttributePresetReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Product Attribute Preset"
        ],
        "operationId": "getProductAttributePresetByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productAttributePresetIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProductAttributePresetDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Product Attribute Preset"
        ],
        "operationId": "updateProductAttributePresetByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productAttributePresetIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProductAttributePresetRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProductAttributePresetDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/product-attribute-presets/scaffold": {
      "post": {
        "tags": [
          "Product Attribute Preset"
        ],
        "operationId": "createProductAttributePresetScaffold",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProductAttributePresetDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/product-attribute-presets/sort": {
      "put": {
        "tags": [
          "Product Attribute Preset"
        ],
        "operationId": "sortProductAttributePresets",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/product-attributes": {
      "post": {
        "tags": [
          "Product Attribute"
        ],
        "operationId": "createProductAttribute",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateProductAttributeRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProductAttributeDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Product Attribute"
        ],
        "operationId": "getProductAttributes",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ProductAttributeDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/product-attributes/{productAttributeIdOrAlias}": {
      "delete": {
        "tags": [
          "Product Attribute"
        ],
        "operationId": "deleteProductAttributeByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productAttributeIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProductAttributeReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Product Attribute"
        ],
        "operationId": "getProductAttributeByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productAttributeIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProductAttributeDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Product Attribute"
        ],
        "operationId": "updateProductAttributeByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productAttributeIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProductAttributeRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProductAttributeDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/product-attributes/scaffold": {
      "post": {
        "tags": [
          "Product Attribute"
        ],
        "operationId": "createProductAttributeScaffold",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProductAttributeDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/product-attributes/sort": {
      "put": {
        "tags": [
          "Product Attribute"
        ],
        "operationId": "sortProductAttributes",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/products/{productReference}": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "getProductByReference",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProductDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Product"
        ],
        "operationId": "updateProductByReference",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProductRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProductDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/products/{productReference}/attributes": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "getProductVariantAttributes",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          },
          {
            "name": "productReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/AttributeDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/products/{productReference}/variants/{productVariantReference}": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "getProductVariantByReference",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productVariantReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProductDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Product"
        ],
        "operationId": "updateProductVariantByReference",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productVariantReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProductRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProductDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/products/stock": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "getProductVariantStockByReference",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productReferences",
            "in": "path",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ProductStockDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/products/summaries": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "getProductSummaries",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter the returned list of items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "Return all results": {
                "value": " "
              },
              "Return items in a given category": {
                "value": "category:order"
              }
            }
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PagedProductSummaryDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/products/summaries/{productReference}/variants": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "getProductVariantSummaries",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter the returned list of items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "Return all results": {
                "value": " "
              },
              "Return items in a given category": {
                "value": "category:order"
              }
            }
          },
          {
            "name": "productReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PagedProductVariantSummaryDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/sales-tax-providers": {
      "get": {
        "tags": [
          "Sales Tax Provider"
        ],
        "operationId": "getSalesTaxProviders",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/SalesTaxProviderDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/sales-tax-providers/{salesTaxProviderAlias}": {
      "get": {
        "tags": [
          "Sales Tax Provider"
        ],
        "operationId": "getSalesTaxProviderByAlias",
        "parameters": [
          {
            "name": "salesTaxProviderAlias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/SalesTaxProviderDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/session": {
      "get": {
        "tags": [
          "Session"
        ],
        "operationId": "getSession",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UserSessionDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/shipping-methods": {
      "post": {
        "tags": [
          "Shipping Method"
        ],
        "operationId": "createShippingMethod",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateShippingMethodRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ShippingMethodDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Shipping Method"
        ],
        "operationId": "getShippingMethods",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ShippingMethodDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/shipping-methods/{shippingMethodIdOrAlias}": {
      "delete": {
        "tags": [
          "Shipping Method"
        ],
        "operationId": "deleteShippingMethodByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingMethodIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ShippingMethodReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Shipping Method"
        ],
        "operationId": "getShippingMethodByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingMethodIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ShippingMethodDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Shipping Method"
        ],
        "operationId": "updateShippingMethodByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingMethodIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateShippingMethodRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ShippingMethodDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/shipping-methods/scaffold": {
      "post": {
        "tags": [
          "Shipping Method"
        ],
        "operationId": "createShippingMethodScaffold",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ScaffoldShippingMethodRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ShippingMethodDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/shipping-methods/sort": {
      "put": {
        "tags": [
          "Shipping Method"
        ],
        "operationId": "sortShippingMethods",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/shipping-providers": {
      "get": {
        "tags": [
          "Shipping Provider"
        ],
        "operationId": "getShippingProviders",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ShippingProviderDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/shipping-providers/{shippingProviderAlias}": {
      "get": {
        "tags": [
          "Shipping Provider"
        ],
        "operationId": "getShippingProviderByAlias",
        "parameters": [
          {
            "name": "shippingProviderAlias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ShippingProviderDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/shipping-rate-providers": {
      "get": {
        "tags": [
          "Shipping Rate Provider"
        ],
        "operationId": "getShippingRateProviders",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ShippingRateProviderDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/shipping-rate-range-providers": {
      "get": {
        "tags": [
          "Shipping Rate Provider"
        ],
        "operationId": "getShippingRateRangeProviders",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ShippingRateRangeProviderDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/stores": {
      "post": {
        "tags": [
          "Store"
        ],
        "operationId": "createStore",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateStoreRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/StoreDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Store"
        ],
        "operationId": "getStores",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/StoreDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/stores/{storeIdOrAlias}": {
      "delete": {
        "tags": [
          "Store"
        ],
        "operationId": "deleteStoreByIdOrAlias",
        "parameters": [
          {
            "name": "storeIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/StoreReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Store"
        ],
        "operationId": "getStoreByIdOrAlias",
        "parameters": [
          {
            "name": "storeIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/StoreDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Store"
        ],
        "operationId": "updateStoreByIdOrAlias",
        "parameters": [
          {
            "name": "storeIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateStoreRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/StoreDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/stores/{storeIdOrAlias}/stats": {
      "post": {
        "tags": [
          "Store"
        ],
        "operationId": "getStoreStatsByIdOrAlias",
        "parameters": [
          {
            "name": "storeIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/StoreStatsRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/StoreStatsDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/stores/sort": {
      "put": {
        "tags": [
          "Store"
        ],
        "operationId": "sortStores",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/tax-calculation-methods": {
      "post": {
        "tags": [
          "Tax Calculation Method"
        ],
        "operationId": "createTaxCalculationMethod",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaxCalculationMethodRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TaxCalculationMethodDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Tax Calculation Method"
        ],
        "operationId": "getTaxCalculationMethods",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/TaxCalculationMethodDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/tax-calculation-methods/{taxCalculationMethodIdOrAlias}": {
      "delete": {
        "tags": [
          "Tax Calculation Method"
        ],
        "operationId": "deleteTaxCalculationMethodByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taxCalculationMethodIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TaxCalculationMethodReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Tax Calculation Method"
        ],
        "operationId": "getTaxCalculationMethodByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taxCalculationMethodIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TaxCalculationMethodDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Tax Calculation Method"
        ],
        "operationId": "updateTaxCalculationMethodByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taxCalculationMethodIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaxCalculationMethodRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TaxCalculationMethodDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/tax-calculation-methods/scaffold": {
      "post": {
        "tags": [
          "Tax Calculation Method"
        ],
        "operationId": "createTaxCalculationMethodScaffold",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ScaffoldTaxCalculationMethodRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TaxCalculationMethodDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/tax-calculation-methods/sort": {
      "put": {
        "tags": [
          "Tax Calculation Method"
        ],
        "operationId": "sortTaxCalculationMethods",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/tax-classes": {
      "post": {
        "tags": [
          "Tax Class"
        ],
        "operationId": "createTaxClass",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaxClassRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TaxClassDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Tax Class"
        ],
        "operationId": "getTaxClasses",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/TaxClassDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/tax-classes/{taxClassIdOrAlias}": {
      "delete": {
        "tags": [
          "Tax Class"
        ],
        "operationId": "deleteTaxClassByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taxClassIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TaxClassReferenceDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Tax Class"
        ],
        "operationId": "getTaxClassByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taxClassIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TaxClassDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Tax Class"
        ],
        "operationId": "updateTaxClassByIdOrAlias",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taxClassIdOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaxClassRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TaxClassDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/tax-classes/scaffold": {
      "post": {
        "tags": [
          "Tax Class"
        ],
        "operationId": "createTaxClassScaffold",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the properties returned in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Return all fields": {
                "value": " "
              },
              "Return single field": {
                "value": "totalprice"
              },
              "Return multiple fields": {
                "value": "orderlines,totalprice"
              },
              "Return nested fields": {
                "value": "orderlines[sku,description]"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": " "
              },
              "Expand prices": {
                "value": "$price"
              },
              "Expand specific property": {
                "value": "currency"
              },
              "Expand nested properties": {
                "value": "paymentmethod[taxclass]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TaxClassDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/tax-classes/sort": {
      "put": {
        "tags": [
          "Tax Class"
        ],
        "operationId": "sortTaxClasses",
        "parameters": [
          {
            "name": "store",
            "in": "header",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "LanguageIsoCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Umb-Notifications": {
                "description": "The list of notifications produced during the request.",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHeaderModel"
                  },
                  "nullable": true
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/cultures": {
      "get": {
        "tags": [
          "Utility"
        ],
        "operationId": "getCultures",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/CultureDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/enum/{type}": {
      "get": {
        "tags": [
          "Utility"
        ],
        "operationId": "getEnumOptionsByType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EnumOptionDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/exchange-rates/provider": {
      "get": {
        "tags": [
          "Utility"
        ],
        "operationId": "getExchangeRateServiceProvider",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ExchangeRateServiceProviderDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/licensing/status": {
      "get": {
        "tags": [
          "Utility"
        ],
        "operationId": "getLicensingStatus",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/LicensingStatusDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    },
    "/umbraco/commerce/management/api/v1/util/GetMediaFromUrl": {
      "get": {
        "tags": [
          "Utility"
        ],
        "operationId": "getMediaFromUrl",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MediaContentDto"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The resource is protected and requires an authentication token"
          }
        },
        "security": [
          {
            "Backoffice User": [ ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ActivityLogEntryDto": {
        "type": "object",
        "properties": {
          "storeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "eventType": {
            "type": "string",
            "nullable": true
          },
          "eventData": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "eventDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdjustedAmountDto": {
        "type": "object",
        "properties": {
          "adjustments": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AmountAdjustmentDto"
                }
              ]
            },
            "nullable": true
          },
          "withoutAdjustments": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AmountDto"
              }
            ],
            "nullable": true
          },
          "adjustment": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AmountDto"
              }
            ],
            "nullable": true
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AmountDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdjustedPriceDto": {
        "type": "object",
        "properties": {
          "adjustments": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PriceAdjustmentDto"
                }
              ]
            },
            "nullable": true
          },
          "withoutAdjustments": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceDto"
              }
            ],
            "nullable": true
          },
          "adjustment": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceDto"
              }
            ],
            "nullable": true
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdjustedPriceWithPreviousAdjustmentsDto": {
        "type": "object",
        "properties": {
          "adjustments": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PriceAdjustmentDto"
                }
              ]
            },
            "nullable": true
          },
          "withoutAdjustments": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceDto"
              }
            ],
            "nullable": true
          },
          "adjustment": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceDto"
              }
            ],
            "nullable": true
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceDto"
              }
            ],
            "nullable": true
          },
          "previousAdjustments": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceDto"
              }
            ],
            "nullable": true
          },
          "withPreviousAdjustments": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceDto"
              }
            ],
            "nullable": true
          },
          "totalAdjustment": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AllowedCountryDto": {
        "type": "object",
        "properties": {
          "country": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CountryDto"
              },
              {
                "$ref": "#/components/schemas/CountryNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/CountryReferenceDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AllowedCountryRegionDto": {
        "type": "object",
        "properties": {
          "country": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CountryDto"
              },
              {
                "$ref": "#/components/schemas/CountryNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/CountryReferenceDto"
              }
            ],
            "nullable": true
          },
          "region": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/RegionDto"
              },
              {
                "$ref": "#/components/schemas/RegionNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/RegionReferenceDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AllowedCountryRegionRequestDto": {
        "required": [
          "country"
        ],
        "type": "object",
        "properties": {
          "country": {
            "oneOf": [
              {
                "type": "string"
              }
            ]
          },
          "region": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AllowedCountryRequestDto": {
        "required": [
          "country"
        ],
        "type": "object",
        "properties": {
          "country": {
            "oneOf": [
              {
                "type": "string"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "AmountAdjustmentDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AmountDto"
              }
            ],
            "nullable": true
          },
          "originalAmount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AmountDto"
              }
            ],
            "nullable": true
          },
          "metaData": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AmountDto": {
        "type": "object",
        "properties": {
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyReferenceDto"
              }
            ],
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "formatted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedAmountDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AnalyticsAbandonedCartConversionRatesDataDto": {
        "required": [
          "currentConversionRate",
          "currentFinalizedCarts",
          "currentNotifiedCarts",
          "datasets",
          "value"
        ],
        "type": "object",
        "properties": {
          "datasets": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ChartDatasetInt64Dto"
                }
              ]
            }
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ]
          },
          "percentageChange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "nullable": true
          },
          "percentagePointChange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "nullable": true
          },
          "currentNotifiedCarts": {
            "type": "integer",
            "format": "int64"
          },
          "currentFinalizedCarts": {
            "type": "integer",
            "format": "int64"
          },
          "previousNotifiedCarts": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "previousFinalizedCarts": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "currentConversionRate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "readOnly": true
          },
          "previousConversionRate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AnalyticsAverageOrderValueDataDto": {
        "required": [
          "datasets",
          "value"
        ],
        "type": "object",
        "properties": {
          "datasets": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ChartDatasetDecimalDto"
                }
              ]
            }
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ]
          },
          "percentageChange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "nullable": true
          },
          "percentagePointChange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AnalyticsCartConversionRatesDataDto": {
        "required": [
          "currentTotalCarts",
          "datasets",
          "dateRangeExceedsCartCleanupPolicy",
          "totalCartsFinalized",
          "totalCartsReachedCheckout",
          "value"
        ],
        "type": "object",
        "properties": {
          "datasets": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ChartDatasetInt64Dto"
                }
              ]
            }
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ]
          },
          "percentageChange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "nullable": true
          },
          "percentagePointChange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "nullable": true
          },
          "currentTotalCarts": {
            "type": "integer",
            "format": "int64"
          },
          "previousTotalCarts": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "totalCartsReachedCheckout": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CartConversionRateDataDto"
              }
            ]
          },
          "totalCartsFinalized": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CartConversionRateDataDto"
              }
            ]
          },
          "dateRangeExceedsCartCleanupPolicy": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AnalyticsProductSalesDataDto": {
        "required": [
          "products"
        ],
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProductSalesDataDto"
                }
              ]
            }
          }
        },
        "additionalProperties": false
      },
      "AnalyticsRepeatCustomerRatesDataDto": {
        "required": [
          "datasets",
          "value"
        ],
        "type": "object",
        "properties": {
          "datasets": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ChartDatasetDecimalDto"
                }
              ]
            }
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ]
          },
          "percentageChange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "nullable": true
          },
          "percentagePointChange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AnalyticsTotalOrdersDataDto": {
        "required": [
          "datasets",
          "value"
        ],
        "type": "object",
        "properties": {
          "datasets": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ChartDatasetInt64Dto"
                }
              ]
            }
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueInt64Dto"
              }
            ]
          },
          "percentageChange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "nullable": true
          },
          "percentagePointChange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AnalyticsTotalRevenueDataDto": {
        "required": [
          "datasets",
          "value"
        ],
        "type": "object",
        "properties": {
          "datasets": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ChartDatasetDecimalDto"
                }
              ]
            }
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ]
          },
          "percentageChange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "nullable": true
          },
          "percentagePointChange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AnalyticsWidgetRequestDto": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "compareFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "compareTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "localTimezoneOffset": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "localCulture": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeCombinationDto": {
        "type": "object",
        "properties": {
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AttributeNameDto"
              }
            ],
            "nullable": true
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AttributeValueDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeDto": {
        "type": "object",
        "properties": {
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AttributeNameDto"
              }
            ],
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AttributeValueDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeNameDto": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeValueDto": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AutoCreateCountriesAndRegionsRequestDto": {
        "type": "object",
        "properties": {
          "fallbackCurrency": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CartConversionRateDataDto": {
        "required": [
          "currentCarts",
          "currentPercentageOfTotalCarts"
        ],
        "type": "object",
        "properties": {
          "currentCarts": {
            "type": "integer",
            "format": "int64"
          },
          "currentPercentageOfTotalCarts": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ]
          },
          "previousCarts": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "previousPercentageOfTotalCarts": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "nullable": true
          },
          "percentageChange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "nullable": true
          },
          "percentagePointChange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CartPaymentLinkDto": {
        "required": [
          "paymentLink"
        ],
        "type": "object",
        "properties": {
          "paymentLink": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ChartDatasetDecimalDto": {
        "required": [
          "data",
          "labels",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          }
        },
        "additionalProperties": false
      },
      "ChartDatasetInt64Dto": {
        "required": [
          "data",
          "labels",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "additionalProperties": false
      },
      "ContactDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountryDto": {
        "required": [
          "code",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "taxCalculationMethod": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaxCalculationMethodDto"
              },
              {
                "$ref": "#/components/schemas/TaxCalculationMethodNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/TaxCalculationMethodReferenceDto"
              }
            ],
            "nullable": true
          },
          "defaultCurrency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyDto"
              },
              {
                "$ref": "#/components/schemas/CurrencyNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/CurrencyReferenceDto"
              }
            ],
            "nullable": true
          },
          "defaultPaymentMethod": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodDto"
              },
              {
                "$ref": "#/components/schemas/PaymentMethodNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/PaymentMethodReferenceDto"
              },
              {
                "$ref": "#/components/schemas/PaymentMethodWithFeeDto"
              }
            ],
            "nullable": true
          },
          "defaultShippingMethod": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShippingMethodDto"
              },
              {
                "$ref": "#/components/schemas/ShippingMethodNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/ShippingMethodReferenceDto"
              },
              {
                "$ref": "#/components/schemas/ShippingMethodWithRatesDto"
              }
            ],
            "nullable": true
          },
          "regions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/RegionDto"
                },
                {
                  "$ref": "#/components/schemas/RegionNamedReferenceDto"
                },
                {
                  "$ref": "#/components/schemas/RegionReferenceDto"
                }
              ]
            },
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountryNamedReferenceDto": {
        "required": [
          "code",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountryReferenceDto": {
        "required": [
          "code",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CountryRegionTaxClassDto": {
        "type": "object",
        "properties": {
          "country": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CountryDto"
              },
              {
                "$ref": "#/components/schemas/CountryNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/CountryReferenceDto"
              }
            ],
            "nullable": true
          },
          "region": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/RegionDto"
              },
              {
                "$ref": "#/components/schemas/RegionNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/RegionReferenceDto"
              }
            ],
            "nullable": true
          },
          "taxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "taxCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountryRegionTaxClassRequestDto": {
        "required": [
          "country"
        ],
        "type": "object",
        "properties": {
          "country": {
            "oneOf": [
              {
                "type": "string"
              }
            ]
          },
          "region": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "taxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "taxCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCartRequestDto": {
        "required": [
          "currency",
          "languageIsoCode"
        ],
        "type": "object",
        "properties": {
          "languageIsoCode": {
            "type": "string"
          },
          "currency": {
            "oneOf": [
              {
                "type": "string"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CreateCountryRequestDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "taxCalculationMethod": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "defaultCurrency": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "defaultPaymentMethod": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "defaultShippingMethod": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCurrencyRequestDto": {
        "required": [
          "allowedCountries",
          "code",
          "culture",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "culture": {
            "type": "string"
          },
          "formatTemplate": {
            "type": "string",
            "nullable": true
          },
          "allowedCountries": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AllowedCountryRequestDto"
                }
              ]
            }
          }
        },
        "additionalProperties": false
      },
      "CreateDictionaryItemRequestDto": {
        "required": [
          "name",
          "translations"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DictionaryItemTranslationDto"
                }
              ]
            }
          }
        },
        "additionalProperties": false
      },
      "CreateDiscountRequestDto": {
        "required": [
          "alias",
          "blockFurtherDiscounts",
          "blockIfPreviousDiscounts",
          "isActive",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/DiscountType"
          },
          "codes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DiscountCodeDto"
                }
              ]
            },
            "nullable": true
          },
          "rules": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DiscountRuleConfigDto"
              }
            ],
            "nullable": true
          },
          "rewards": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DiscountRewardConfigDto"
                }
              ]
            },
            "nullable": true
          },
          "blockFurtherDiscounts": {
            "type": "boolean"
          },
          "blockIfPreviousDiscounts": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateEmailTemplateRequestDto": {
        "required": [
          "alias",
          "category",
          "senderAddress",
          "senderName",
          "sendToCustomer",
          "subject"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/TemplateCategory"
          },
          "subject": {
            "type": "string"
          },
          "senderName": {
            "type": "string"
          },
          "senderAddress": {
            "type": "string"
          },
          "replyToAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "toAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ccAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "bccAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "sendToCustomer": {
            "type": "boolean"
          },
          "templateView": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateExportTemplateRequestDto": {
        "required": [
          "alias",
          "category",
          "exportStrategy",
          "fileExtension",
          "fileMimeType",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/TemplateCategory"
          },
          "fileMimeType": {
            "type": "string"
          },
          "fileExtension": {
            "type": "string"
          },
          "exportStrategy": {
            "$ref": "#/components/schemas/ExportStrategy"
          },
          "templateView": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateGiftCardRequestDto": {
        "required": [
          "code",
          "currency",
          "isActive",
          "originalAmount"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "currency": {
            "oneOf": [
              {
                "type": "string"
              }
            ]
          },
          "originalAmount": {
            "type": "number",
            "format": "double"
          },
          "remainingAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateLocationRequestDto": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "countryIsoCode": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/LocationType"
          }
        },
        "additionalProperties": false
      },
      "CreateOrderStatusRequestDto": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePaymentMethodRequestDto": {
        "required": [
          "alias",
          "name",
          "paymentProviderAlias"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "taxClass": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "paymentProviderAlias": {
            "type": "string"
          },
          "paymentProviderSettings": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "enabledFeatures": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentProviderFeaturesDto"
              }
            ],
            "nullable": true
          },
          "allowedCountryRegions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AllowedCountryRegionRequestDto"
                }
              ]
            },
            "nullable": true
          },
          "prices": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ServicePriceRequestDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePrintTemplateRequestDto": {
        "required": [
          "alias",
          "category",
          "name"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/TemplateCategory"
          },
          "templateView": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateProductAttributePresetRequestDto": {
        "required": [
          "alias",
          "attributes",
          "name"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "additionalProperties": false
      },
      "CreateProductAttributeRequestDto": {
        "required": [
          "attribute",
          "values"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TranslatedValueRequestDto"
              }
            ]
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TranslatedValueRequestDto"
                }
              ]
            }
          }
        },
        "additionalProperties": false
      },
      "CreateRegionRequestDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "defaultPaymentMethod": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "defaultShippingMethod": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateShippingMethodRequestDto": {
        "required": [
          "alias",
          "calculationMode",
          "name",
          "shippingProviderAlias"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "taxClass": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "imageId": {
            "type": "string",
            "nullable": true
          },
          "shippingProviderAlias": {
            "type": "string"
          },
          "calculationMode": {
            "type": "string"
          },
          "shippingProviderSettings": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "allowedCountryRegions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AllowedCountryRegionRequestDto"
                }
              ]
            },
            "nullable": true
          },
          "calculationConfig": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DynamicRateShippingCalculationConfigRequestDto"
              },
              {
                "$ref": "#/components/schemas/FixedRateShippingCalculationConfigRequestDto"
              },
              {
                "$ref": "#/components/schemas/RealtimeRateShippingCalculationConfigRequestDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateStoreRequestDto": {
        "required": [
          "autoPopulate",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "autoPopulate": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateTaxCalculationMethodRequestDto": {
        "required": [
          "alias",
          "name",
          "salesTaxProviderAlias"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "salesTaxProviderAlias": {
            "type": "string"
          },
          "salesTaxProviderSettings": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTaxClassRequestDto": {
        "required": [
          "alias",
          "name"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "defaultTaxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "defaultTaxCode": {
            "type": "string",
            "nullable": true
          },
          "countryRegionTaxClasses": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CountryRegionTaxClassRequestDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CultureDto": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CurrencyDto": {
        "required": [
          "code",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "culture": {
            "type": "string",
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "decimalPlaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "decimalSeparator": {
            "type": "string",
            "nullable": true
          },
          "groupSeparator": {
            "type": "string",
            "nullable": true
          },
          "formatTemplate": {
            "type": "string",
            "nullable": true
          },
          "allowedCountries": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AllowedCountryDto"
                }
              ]
            },
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CurrencyNamedReferenceDto": {
        "required": [
          "code",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CurrencyReferenceDto": {
        "required": [
          "code",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CustomerDto": {
        "type": "object",
        "properties": {
          "customerReference": {
            "type": "string",
            "nullable": true
          },
          "isRegistered": {
            "type": "boolean",
            "nullable": true
          },
          "isUmbracoMember": {
            "type": "boolean",
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PropertyValueDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DictionaryItemDto": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DictionaryItemTranslationDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DictionaryItemTranslationDto": {
        "required": [
          "isoCode",
          "translation"
        ],
        "type": "object",
        "properties": {
          "isoCode": {
            "type": "string"
          },
          "translation": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DiscountCodeDto": {
        "required": [
          "code",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "usageLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isUnlimited": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscountDto": {
        "required": [
          "alias",
          "id",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/DiscountType"
          },
          "codes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DiscountCodeDto"
                }
              ]
            },
            "nullable": true
          },
          "rules": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DiscountRuleConfigDto"
              }
            ],
            "nullable": true
          },
          "rewards": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DiscountRewardConfigDto"
                }
              ]
            },
            "nullable": true
          },
          "blockFurtherDiscounts": {
            "type": "boolean",
            "nullable": true
          },
          "blockIfPreviousDiscounts": {
            "type": "boolean",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/DiscountStatus"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscountNamedReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscountReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DiscountRewardConfigDto": {
        "type": "object",
        "properties": {
          "rewardProviderAlias": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscountRewardProviderDto": {
        "type": "object",
        "properties": {
          "icon": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "viewUiAlias": {
            "type": "string",
            "nullable": true
          },
          "viewElementName": {
            "type": "string",
            "nullable": true
          },
          "viewConfig": {
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "settingDefinitions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PropertyDefinitionDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscountRuleConfigDto": {
        "required": [
          "ruleProviderAlias"
        ],
        "type": "object",
        "properties": {
          "ruleProviderAlias": {
            "type": "string"
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DiscountRuleConfigDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscountRuleProviderDto": {
        "type": "object",
        "properties": {
          "icon": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "viewUiAlias": {
            "type": "string",
            "nullable": true
          },
          "viewElementName": {
            "type": "string",
            "nullable": true
          },
          "viewConfig": {
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "settingDefinitions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PropertyDefinitionDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscountStatus": {
        "enum": [
          "Active",
          "Inactive",
          "Scheduled",
          "Expired"
        ],
        "type": "string"
      },
      "DiscountType": {
        "enum": [
          "Automatic",
          "Code"
        ],
        "type": "string"
      },
      "DynamicRateShippingCalculationConfigDto": {
        "type": "object",
        "properties": {
          "rangeProviderAlias": {
            "type": "string",
            "nullable": true
          },
          "rates": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DynamicShippingRateDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicRateShippingCalculationConfigRequestDto": {
        "type": "object",
        "properties": {
          "rangeProviderAlias": {
            "type": "string",
            "nullable": true
          },
          "rates": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DynamicShippingRateDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicShippingRateDto": {
        "type": "object",
        "properties": {
          "from": {
            "nullable": true
          },
          "to": {
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DynamicShippingRateValueDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicShippingRateValueDto": {
        "type": "object",
        "properties": {
          "rateProviderAlias": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmailTemplateDto": {
        "required": [
          "alias",
          "category",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/TemplateCategory"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "senderName": {
            "type": "string",
            "nullable": true
          },
          "senderAddress": {
            "type": "string",
            "nullable": true
          },
          "replyToAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "toAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ccAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "bccAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "sendToCustomer": {
            "type": "boolean",
            "nullable": true
          },
          "templateView": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmailTemplateNamedReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmailTemplateReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EnumOptionDto": {
        "required": [
          "key",
          "label"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EventMessageTypeModel": {
        "enum": [
          "Default",
          "Info",
          "Error",
          "Success",
          "Warning"
        ],
        "type": "string"
      },
      "ExchangeRateServiceProviderDto": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ExportRequestDto": {
        "required": [
          "entityIds",
          "entityType",
          "languageIsoCode",
          "templateIds"
        ],
        "type": "object",
        "properties": {
          "templateIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "entityType": {
            "type": "string"
          },
          "entityIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "languageIsoCode": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ExportStrategy": {
        "enum": [
          "SingleFile",
          "MultiFile"
        ],
        "type": "string"
      },
      "ExportTemplateDto": {
        "required": [
          "alias",
          "category",
          "exportStrategy",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/TemplateCategory"
          },
          "fileMimeType": {
            "type": "string",
            "nullable": true
          },
          "fileExtension": {
            "type": "string",
            "nullable": true
          },
          "exportStrategy": {
            "$ref": "#/components/schemas/ExportStrategy"
          },
          "templateView": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExportTemplateReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "FinalizeCartRequestDto": {
        "required": [
          "paymentStatus",
          "transactionId"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "paymentStatus": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "FixedRateShippingCalculationConfigDto": {
        "type": "object",
        "properties": {
          "prices": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ServicePriceDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FixedRateShippingCalculationConfigRequestDto": {
        "required": [
          "prices"
        ],
        "type": "object",
        "properties": {
          "prices": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ServicePriceRequestDto"
                }
              ]
            }
          }
        },
        "additionalProperties": false
      },
      "FormattedAmountDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormattedPriceDto": {
        "type": "object",
        "properties": {
          "withoutTax": {
            "type": "string",
            "nullable": true
          },
          "tax": {
            "type": "string",
            "nullable": true
          },
          "withTax": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormattedValueDecimalDto": {
        "required": [
          "value",
          "valueFormatted"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "valueFormatted": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "FormattedValueInt64Dto": {
        "required": [
          "value",
          "valueFormatted"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int64"
          },
          "valueFormatted": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GenerateCartPaymentLinkRequestDto": {
        "required": [
          "landingPageUrl",
          "validityPeriod"
        ],
        "type": "object",
        "properties": {
          "validityPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "landingPageUrl": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GiftCardActivationMethod": {
        "enum": [
          "Manual",
          "Automatic",
          "OrderStatus"
        ],
        "type": "string"
      },
      "GiftCardDto": {
        "required": [
          "code",
          "id",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyDto"
              },
              {
                "$ref": "#/components/schemas/CurrencyNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/CurrencyReferenceDto"
              }
            ],
            "nullable": true
          },
          "order": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrderDto"
              },
              {
                "$ref": "#/components/schemas/OrderReferenceDto"
              }
            ],
            "nullable": true
          },
          "originalAmount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AmountDto"
              }
            ],
            "nullable": true
          },
          "remainingAmount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AmountDto"
              }
            ],
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/GiftCardStatus"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GiftCardReferenceDto": {
        "required": [
          "code",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GiftCardStatus": {
        "enum": [
          "Active",
          "Inactive",
          "Expired",
          "Redeemed"
        ],
        "type": "string"
      },
      "Iso3166CountryDto": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "regions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Iso3166RegionDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Iso3166RegionDto": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LicensingStatusDto": {
        "required": [
          "isLicensed",
          "isTrial"
        ],
        "type": "object",
        "properties": {
          "isLicensed": {
            "type": "boolean"
          },
          "isTrial": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LocationDto": {
        "required": [
          "alias",
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "countryIsoCode": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/LocationType"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationNamedReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LocationType": {
        "enum": [
          "Commercial",
          "Residential"
        ],
        "type": "string"
      },
      "MeasurementSystem": {
        "enum": [
          "Metric",
          "Imperial"
        ],
        "type": "string"
      },
      "MediaContentDto": {
        "required": [
          "id",
          "key"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "NotificationHeaderModel": {
        "required": [
          "category",
          "message",
          "type"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EventMessageTypeModel"
          }
        },
        "additionalProperties": false
      },
      "OrderAppliedDiscountCodeDto": {
        "type": "object",
        "properties": {
          "discount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DiscountDto"
              },
              {
                "$ref": "#/components/schemas/DiscountNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/DiscountReferenceDto"
              }
            ],
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "isFulfilled": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderBillingInfoDto": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CountryDto"
              },
              {
                "$ref": "#/components/schemas/CountryNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/CountryReferenceDto"
              }
            ],
            "nullable": true
          },
          "region": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/RegionDto"
              },
              {
                "$ref": "#/components/schemas/RegionNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/RegionReferenceDto"
              }
            ],
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "companyTaxCode": {
            "type": "string",
            "nullable": true
          },
          "contact": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContactDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderCustomerInfoDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "nullable": true
          },
          "customerReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDto": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "orderNumber": {
            "type": "string",
            "nullable": true
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "cartNumber": {
            "type": "string",
            "nullable": true
          },
          "languageIsoCode": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyDto"
              },
              {
                "$ref": "#/components/schemas/CurrencyNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/CurrencyReferenceDto"
              }
            ],
            "nullable": true
          },
          "taxClass": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaxClassDto"
              },
              {
                "$ref": "#/components/schemas/TaxClassNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/TaxClassReferenceDto"
              }
            ],
            "nullable": true
          },
          "taxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "orderStatus": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrderStatusDto"
              },
              {
                "$ref": "#/components/schemas/OrderStatusNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/OrderStatusReferenceDto"
              }
            ],
            "nullable": true
          },
          "customer": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrderCustomerInfoDto"
              }
            ],
            "nullable": true
          },
          "billing": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrderBillingInfoDto"
              }
            ],
            "nullable": true
          },
          "payment": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrderPaymentInfoDto"
              }
            ],
            "nullable": true
          },
          "shipping": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrderShippingInfoDto"
              }
            ],
            "nullable": true
          },
          "transaction": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrderTransactionInfoDto"
              }
            ],
            "nullable": true
          },
          "discountCodes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OrderAppliedDiscountCodeDto"
                }
              ]
            },
            "nullable": true
          },
          "discounts": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DiscountDto"
                },
                {
                  "$ref": "#/components/schemas/DiscountNamedReferenceDto"
                },
                {
                  "$ref": "#/components/schemas/DiscountReferenceDto"
                }
              ]
            },
            "nullable": true
          },
          "giftCards": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GiftCardDto"
                },
                {
                  "$ref": "#/components/schemas/GiftCardReferenceDto"
                }
              ]
            },
            "nullable": true
          },
          "totalQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "subtotalPrice": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdjustedPriceWithPreviousAdjustmentsDto"
              }
            ],
            "nullable": true
          },
          "totalPrice": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdjustedPriceWithPreviousAdjustmentsDto"
              }
            ],
            "nullable": true
          },
          "transactionAmount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdjustedAmountDto"
              }
            ],
            "nullable": true
          },
          "orderLines": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OrderLineDto"
                }
              ]
            },
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "notes": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrderNotesDto"
              }
            ],
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updateDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "finalizedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isFinalized": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDto": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "productReference": {
            "type": "string",
            "nullable": true
          },
          "productVariantReference": {
            "type": "string",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "taxClass": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaxClassDto"
              },
              {
                "$ref": "#/components/schemas/TaxClassNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/TaxClassReferenceDto"
              }
            ],
            "nullable": true
          },
          "bundleId": {
            "type": "string",
            "nullable": true
          },
          "orderLines": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OrderLineDto"
                }
              ]
            },
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AttributeCombinationDto"
                }
              ]
            },
            "nullable": true
          },
          "basePrice": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdjustedPriceDto"
              }
            ],
            "nullable": true
          },
          "unitPrice": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdjustedPriceDto"
              }
            ],
            "nullable": true
          },
          "taxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalPrice": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdjustedPriceWithPreviousAdjustmentsDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderNotesDto": {
        "type": "object",
        "properties": {
          "customerNotes": {
            "type": "string",
            "nullable": true
          },
          "internalNotes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentInfoDto": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodDto"
              },
              {
                "$ref": "#/components/schemas/PaymentMethodNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/PaymentMethodReferenceDto"
              },
              {
                "$ref": "#/components/schemas/PaymentMethodWithFeeDto"
              }
            ],
            "nullable": true
          },
          "taxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalPrice": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdjustedPriceDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderReferenceDto": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "orderNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderRefundRequest": {
        "required": [
          "refundAmount",
          "restockProducts"
        ],
        "type": "object",
        "properties": {
          "refundAmount": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "orderlines": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OrderlineRefundRequest"
                }
              ]
            },
            "nullable": true
          },
          "restockProducts": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "OrderRoundingMethod": {
        "enum": [
          "Unit",
          "Line",
          "Total"
        ],
        "type": "string"
      },
      "OrderShippingInfoDto": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CountryDto"
              },
              {
                "$ref": "#/components/schemas/CountryNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/CountryReferenceDto"
              }
            ],
            "nullable": true
          },
          "region": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/RegionDto"
              },
              {
                "$ref": "#/components/schemas/RegionNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/RegionReferenceDto"
              }
            ],
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "companyTaxCode": {
            "type": "string",
            "nullable": true
          },
          "sameAsBilling": {
            "type": "boolean",
            "nullable": true
          },
          "contact": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContactDto"
              }
            ],
            "nullable": true
          },
          "shippingMethod": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShippingMethodDto"
              },
              {
                "$ref": "#/components/schemas/ShippingMethodNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/ShippingMethodReferenceDto"
              },
              {
                "$ref": "#/components/schemas/ShippingMethodWithRatesDto"
              }
            ],
            "nullable": true
          },
          "shippingOption": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShippingOptionDto"
              }
            ],
            "nullable": true
          },
          "taxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalPrice": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdjustedPriceDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderStatusDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderStatusNamedReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderStatusReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "OrderTransactionInfoDto": {
        "required": [
          "paymentStatus",
          "transactionActivities"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "nullable": true
          },
          "authorizedAmount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AmountDto"
              }
            ],
            "nullable": true
          },
          "feeAmount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AmountDto"
              }
            ],
            "nullable": true
          },
          "baseCurrencyExchangeRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentStatus": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "refundedAmount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AmountDto"
              }
            ],
            "nullable": true
          },
          "refundableAmount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AmountDto"
              }
            ],
            "nullable": true
          },
          "transactionActivities": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TransactionActivityDto"
                }
              ]
            }
          }
        },
        "additionalProperties": false
      },
      "OrderlineRefundRequest": {
        "required": [
          "orderLineId",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "orderLineId": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PagedActivityLogEntryDto": {
        "required": [
          "items",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ActivityLogEntryDto"
                }
              ]
            }
          }
        },
        "additionalProperties": false
      },
      "PagedGiftCardDto": {
        "required": [
          "items",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GiftCardDto"
                }
              ]
            }
          }
        },
        "additionalProperties": false
      },
      "PagedOrderDto": {
        "required": [
          "items",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OrderDto"
                }
              ]
            }
          }
        },
        "additionalProperties": false
      },
      "PagedProductSummaryDto": {
        "required": [
          "items",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProductSummaryDto"
                }
              ]
            }
          }
        },
        "additionalProperties": false
      },
      "PagedProductVariantSummaryDto": {
        "required": [
          "items",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProductVariantSummaryDto"
                }
              ]
            }
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "taxClass": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaxClassDto"
              },
              {
                "$ref": "#/components/schemas/TaxClassNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/TaxClassReferenceDto"
              }
            ],
            "nullable": true
          },
          "imageId": {
            "type": "string",
            "nullable": true
          },
          "paymentProviderAlias": {
            "type": "string",
            "nullable": true
          },
          "paymentProviderSettings": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "enabledFeatures": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentProviderFeaturesDto"
              }
            ],
            "nullable": true
          },
          "allowedCountryRegions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AllowedCountryRegionDto"
                }
              ]
            },
            "nullable": true
          },
          "prices": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ServicePriceDto"
                }
              ]
            },
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodNamedReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodWithFeeDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "taxClass": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaxClassDto"
              },
              {
                "$ref": "#/components/schemas/TaxClassNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/TaxClassReferenceDto"
              }
            ],
            "nullable": true
          },
          "imageId": {
            "type": "string",
            "nullable": true
          },
          "paymentProviderAlias": {
            "type": "string",
            "nullable": true
          },
          "paymentProviderSettings": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "enabledFeatures": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentProviderFeaturesDto"
              }
            ],
            "nullable": true
          },
          "allowedCountryRegions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AllowedCountryRegionDto"
                }
              ]
            },
            "nullable": true
          },
          "prices": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ServicePriceDto"
                }
              ]
            },
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentProviderDto": {
        "type": "object",
        "properties": {
          "icon": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isObsolete": {
            "type": "boolean",
            "nullable": true
          },
          "supportedFeatures": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentProviderFeaturesDto"
              }
            ],
            "nullable": true
          },
          "transactionMetaDataDefinitions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PropertyDefinitionDto"
                }
              ]
            },
            "nullable": true
          },
          "settingDefinitions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PaymentProviderSettingDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentProviderFeaturesDto": {
        "required": [
          "partiallyRefundPayment"
        ],
        "type": "object",
        "properties": {
          "fetchPaymentStatus": {
            "type": "boolean",
            "nullable": true
          },
          "cancelPayment": {
            "type": "boolean",
            "nullable": true
          },
          "capturePayment": {
            "type": "boolean",
            "nullable": true
          },
          "refundPayment": {
            "type": "boolean",
            "nullable": true
          },
          "partiallyRefundPayment": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PaymentProviderSettingDto": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "viewUiAlias": {
            "type": "string",
            "nullable": true
          },
          "viewElementName": {
            "type": "string",
            "nullable": true
          },
          "viewConfig": {
            "nullable": true
          },
          "editorAlias": {
            "type": "string",
            "nullable": true
          },
          "editorUiAlias": {
            "type": "string",
            "nullable": true
          },
          "editorElementName": {
            "type": "string",
            "nullable": true
          },
          "editorConfig": {
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "isAdvanced": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentStatus": {
        "enum": [
          "Initialized",
          "Authorized",
          "Captured",
          "Cancelled",
          "Refunded",
          "PendingExternalSystem",
          "PartiallyRefunded",
          "Error"
        ],
        "type": "string"
      },
      "PriceAdjustmentDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceDto"
              }
            ],
            "nullable": true
          },
          "originalPrice": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceDto"
              }
            ],
            "nullable": true
          },
          "metaData": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PriceDto": {
        "type": "object",
        "properties": {
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyReferenceDto"
              }
            ],
            "nullable": true
          },
          "withoutTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "withTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "formatted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedPriceDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PrintTemplateDto": {
        "required": [
          "alias",
          "category",
          "id",
          "name",
          "templateView"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/TemplateCategory"
          },
          "templateView": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PrintTemplateReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProductAttributeDto": {
        "required": [
          "alias",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "attribute": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TranslatedValueDto"
              }
            ],
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TranslatedValueDto"
                }
              ]
            },
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductAttributePresetDto": {
        "required": [
          "alias",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductAttributePresetReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ProductAttributeReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ProductDto": {
        "required": [
          "productReference",
          "sku"
        ],
        "type": "object",
        "properties": {
          "productReference": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "productVariantReference": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "prices": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProductPriceDto"
                }
              ]
            },
            "nullable": true
          },
          "stock": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AttributeCombinationDto"
                }
              ]
            },
            "nullable": true
          },
          "taxClass": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaxClassDto"
              },
              {
                "$ref": "#/components/schemas/TaxClassNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/TaxClassReferenceDto"
              }
            ],
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "isGiftCard": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductPriceDto": {
        "type": "object",
        "properties": {
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyDto"
              },
              {
                "$ref": "#/components/schemas/CurrencyNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/CurrencyReferenceDto"
              }
            ],
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductSalesDataDto": {
        "required": [
          "name",
          "productReference",
          "productVariantReference",
          "sku",
          "totalQuantity"
        ],
        "type": "object",
        "properties": {
          "productReference": {
            "type": "string"
          },
          "productVariantReference": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "totalQuantity": {
            "type": "number",
            "format": "double"
          },
          "percentageChange": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormattedValueDecimalDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductStockDto": {
        "required": [
          "productReference"
        ],
        "type": "object",
        "properties": {
          "productReference": {
            "type": "string"
          },
          "productVariantReference": {
            "type": "string",
            "nullable": true
          },
          "stock": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductSummaryDto": {
        "required": [
          "productReference",
          "sku"
        ],
        "type": "object",
        "properties": {
          "productReference": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "prices": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProductPriceDto"
                }
              ]
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AttributeDto"
                }
              ]
            },
            "nullable": true
          },
          "stock": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hasVariants": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductVariantSummaryDto": {
        "required": [
          "productReference",
          "sku"
        ],
        "type": "object",
        "properties": {
          "productReference": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "productVariantReference": {
            "type": "string",
            "nullable": true
          },
          "prices": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProductPriceDto"
                }
              ]
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AttributeCombinationDto"
                }
              ]
            },
            "nullable": true
          },
          "stock": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PropertyDefinitionDto": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "viewUiAlias": {
            "type": "string",
            "nullable": true
          },
          "viewElementName": {
            "type": "string",
            "nullable": true
          },
          "viewConfig": {
            "nullable": true
          },
          "editorAlias": {
            "type": "string",
            "nullable": true
          },
          "editorUiAlias": {
            "type": "string",
            "nullable": true
          },
          "editorElementName": {
            "type": "string",
            "nullable": true
          },
          "editorConfig": {
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PropertyDefinitionGroupDto": {
        "required": [
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PropertyDefinitionDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PropertyValueDto": {
        "type": "object",
        "properties": {
          "definition": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PropertyDefinitionDto"
              }
            ],
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RealtimeRateShippingCalculationConfigDto": {
        "type": "object",
        "properties": {
          "fixedPriceSurcharge": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "nullable": true
          },
          "percentageSurcharge": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rateCacheDuration": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RealtimeRateShippingCalculationConfigRequestDto": {
        "type": "object",
        "properties": {
          "fixedPriceSurcharge": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "nullable": true
          },
          "percentageSurcharge": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rateCacheDuration": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegionDto": {
        "required": [
          "code",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "country": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CountryDto"
              },
              {
                "$ref": "#/components/schemas/CountryNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/CountryReferenceDto"
              }
            ],
            "nullable": true
          },
          "defaultPaymentMethod": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodDto"
              },
              {
                "$ref": "#/components/schemas/PaymentMethodNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/PaymentMethodReferenceDto"
              },
              {
                "$ref": "#/components/schemas/PaymentMethodWithFeeDto"
              }
            ],
            "nullable": true
          },
          "defaultShippingMethod": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShippingMethodDto"
              },
              {
                "$ref": "#/components/schemas/ShippingMethodNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/ShippingMethodReferenceDto"
              },
              {
                "$ref": "#/components/schemas/ShippingMethodWithRatesDto"
              }
            ],
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegionNamedReferenceDto": {
        "required": [
          "code",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegionReferenceDto": {
        "required": [
          "code",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RenderRequestDto": {
        "required": [
          "entityIds",
          "entityType",
          "templateIds"
        ],
        "type": "object",
        "properties": {
          "templateIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "entityType": {
            "type": "string"
          },
          "entityIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "languageIsoCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesTaxProviderDto": {
        "type": "object",
        "properties": {
          "icon": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isObsolete": {
            "type": "boolean",
            "nullable": true
          },
          "settingDefinitions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SalesTaxProviderSettingDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesTaxProviderSettingDto": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "viewUiAlias": {
            "type": "string",
            "nullable": true
          },
          "viewElementName": {
            "type": "string",
            "nullable": true
          },
          "viewConfig": {
            "nullable": true
          },
          "editorAlias": {
            "type": "string",
            "nullable": true
          },
          "editorUiAlias": {
            "type": "string",
            "nullable": true
          },
          "editorElementName": {
            "type": "string",
            "nullable": true
          },
          "editorConfig": {
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "isAdvanced": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScaffoldCountryRequestDto": {
        "type": "object",
        "properties": {
          "iso3166CountryCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScaffoldGiftCardRequestDto": {
        "required": [
          "currency"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "oneOf": [
              {
                "type": "string"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ScaffoldPaymentMethodRequestDto": {
        "required": [
          "paymentProviderAlias"
        ],
        "type": "object",
        "properties": {
          "paymentProviderAlias": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ScaffoldShippingMethodRequestDto": {
        "required": [
          "calculationMode",
          "shippingProviderAlias"
        ],
        "type": "object",
        "properties": {
          "shippingProviderAlias": {
            "type": "string"
          },
          "calculationMode": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ScaffoldTaxCalculationMethodRequestDto": {
        "required": [
          "salesTaxProviderAlias"
        ],
        "type": "object",
        "properties": {
          "salesTaxProviderAlias": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SendEmailTemplateRequestDto": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "oneOf": [
              {
                "type": "string"
              }
            ]
          },
          "to": {
            "type": "string",
            "nullable": true
          },
          "languageIsoCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServicePriceDto": {
        "type": "object",
        "properties": {
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyDto"
              },
              {
                "$ref": "#/components/schemas/CurrencyNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/CurrencyReferenceDto"
              }
            ],
            "nullable": true
          },
          "country": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CountryDto"
              },
              {
                "$ref": "#/components/schemas/CountryNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/CountryReferenceDto"
              }
            ],
            "nullable": true
          },
          "region": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/RegionDto"
              },
              {
                "$ref": "#/components/schemas/RegionNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/RegionReferenceDto"
              }
            ],
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServicePriceRequestDto": {
        "required": [
          "currency",
          "value"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "oneOf": [
              {
                "type": "string"
              }
            ]
          },
          "country": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "region": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ShippingCalculationMode": {
        "enum": [
          "Fixed",
          "Dynamic",
          "Realtime"
        ],
        "type": "string"
      },
      "ShippingMethodDto": {
        "required": [
          "alias",
          "calculationMode",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "taxClass": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaxClassDto"
              },
              {
                "$ref": "#/components/schemas/TaxClassNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/TaxClassReferenceDto"
              }
            ],
            "nullable": true
          },
          "imageId": {
            "type": "string",
            "nullable": true
          },
          "shippingProviderAlias": {
            "type": "string",
            "nullable": true
          },
          "calculationMode": {
            "$ref": "#/components/schemas/ShippingCalculationMode"
          },
          "calculationConfig": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DynamicRateShippingCalculationConfigDto"
              },
              {
                "$ref": "#/components/schemas/DynamicRateShippingCalculationConfigRequestDto"
              },
              {
                "$ref": "#/components/schemas/FixedRateShippingCalculationConfigDto"
              },
              {
                "$ref": "#/components/schemas/RealtimeRateShippingCalculationConfigDto"
              },
              {
                "$ref": "#/components/schemas/RealtimeRateShippingCalculationConfigRequestDto"
              }
            ],
            "nullable": true
          },
          "shippingProviderSettings": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "allowedCountryRegions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AllowedCountryRegionDto"
                }
              ]
            },
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingMethodNamedReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingMethodReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ShippingMethodWithRatesDto": {
        "required": [
          "alias",
          "calculationMode",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "taxClass": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaxClassDto"
              },
              {
                "$ref": "#/components/schemas/TaxClassNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/TaxClassReferenceDto"
              }
            ],
            "nullable": true
          },
          "imageId": {
            "type": "string",
            "nullable": true
          },
          "shippingProviderAlias": {
            "type": "string",
            "nullable": true
          },
          "calculationMode": {
            "$ref": "#/components/schemas/ShippingCalculationMode"
          },
          "calculationConfig": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DynamicRateShippingCalculationConfigDto"
              },
              {
                "$ref": "#/components/schemas/DynamicRateShippingCalculationConfigRequestDto"
              },
              {
                "$ref": "#/components/schemas/FixedRateShippingCalculationConfigDto"
              },
              {
                "$ref": "#/components/schemas/RealtimeRateShippingCalculationConfigDto"
              },
              {
                "$ref": "#/components/schemas/RealtimeRateShippingCalculationConfigRequestDto"
              }
            ],
            "nullable": true
          },
          "shippingProviderSettings": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "allowedCountryRegions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AllowedCountryRegionDto"
                }
              ]
            },
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rates": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ShippingRateDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingOptionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingProviderDto": {
        "type": "object",
        "properties": {
          "icon": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "supportsRealtimeRates": {
            "type": "boolean",
            "nullable": true
          },
          "isObsolete": {
            "type": "boolean",
            "nullable": true
          },
          "settingDefinitions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ShippingProviderSettingDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingProviderSettingDto": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "viewUiAlias": {
            "type": "string",
            "nullable": true
          },
          "viewElementName": {
            "type": "string",
            "nullable": true
          },
          "viewConfig": {
            "nullable": true
          },
          "editorAlias": {
            "type": "string",
            "nullable": true
          },
          "editorUiAlias": {
            "type": "string",
            "nullable": true
          },
          "editorElementName": {
            "type": "string",
            "nullable": true
          },
          "editorConfig": {
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "isAdvanced": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingRateDto": {
        "type": "object",
        "properties": {
          "option": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShippingOptionDto"
              }
            ],
            "nullable": true
          },
          "packageId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PriceDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingRateProviderDto": {
        "required": [
          "alias"
        ],
        "type": "object",
        "properties": {
          "viewUiAlias": {
            "type": "string",
            "nullable": true
          },
          "viewElementName": {
            "type": "string",
            "nullable": true
          },
          "viewConfig": {
            "nullable": true
          },
          "editorAlias": {
            "type": "string",
            "nullable": true
          },
          "editorUiAlias": {
            "type": "string",
            "nullable": true
          },
          "editorElementName": {
            "type": "string",
            "nullable": true
          },
          "editorConfig": {
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "alias": {
            "type": "string"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingRateRangeProviderDto": {
        "required": [
          "alias"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "viewUiAlias": {
            "type": "string",
            "nullable": true
          },
          "viewElementName": {
            "type": "string",
            "nullable": true
          },
          "viewConfig": {
            "nullable": true
          },
          "editorAlias": {
            "type": "string",
            "nullable": true
          },
          "editorUiAlias": {
            "type": "string",
            "nullable": true
          },
          "editorElementName": {
            "type": "string",
            "nullable": true
          },
          "editorConfig": {
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "alias": {
            "type": "string"
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoreBasicDto": {
        "required": [
          "alias",
          "id",
          "measurementSystem"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "measurementSystem": {
            "$ref": "#/components/schemas/MeasurementSystem"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoreClaimsDto": {
        "required": [
          "alias",
          "claims",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "claims": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "StoreDto": {
        "required": [
          "abandonedCartInactivityPeriod",
          "alias",
          "canRefundTransactionFee",
          "giftCardActivationMethod",
          "id",
          "measurementSystem",
          "orderRoundingMethod"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "measurementSystem": {
            "$ref": "#/components/schemas/MeasurementSystem"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseCurrency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyDto"
              },
              {
                "$ref": "#/components/schemas/CurrencyNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/CurrencyReferenceDto"
              }
            ],
            "nullable": true
          },
          "defaultLocation": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationDto"
              },
              {
                "$ref": "#/components/schemas/LocationNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/LocationReferenceDto"
              }
            ],
            "nullable": true
          },
          "defaultCountry": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CountryDto"
              },
              {
                "$ref": "#/components/schemas/CountryNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/CountryReferenceDto"
              }
            ],
            "nullable": true
          },
          "defaultTaxClass": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaxClassDto"
              },
              {
                "$ref": "#/components/schemas/TaxClassNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/TaxClassReferenceDto"
              }
            ],
            "nullable": true
          },
          "defaultOrderStatus": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrderStatusDto"
              },
              {
                "$ref": "#/components/schemas/OrderStatusNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/OrderStatusReferenceDto"
              }
            ],
            "nullable": true
          },
          "errorOrderStatus": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrderStatusDto"
              },
              {
                "$ref": "#/components/schemas/OrderStatusNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/OrderStatusReferenceDto"
              }
            ],
            "nullable": true
          },
          "pricesIncludeTax": {
            "type": "boolean",
            "nullable": true
          },
          "canRefundTransactionFee": {
            "type": "boolean"
          },
          "useCookies": {
            "type": "boolean",
            "nullable": true
          },
          "cookieTimeout": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "confirmationEmailTemplate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmailTemplateDto"
              },
              {
                "$ref": "#/components/schemas/EmailTemplateNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/EmailTemplateReferenceDto"
              }
            ],
            "nullable": true
          },
          "errorEmailTemplate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmailTemplateDto"
              },
              {
                "$ref": "#/components/schemas/EmailTemplateNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/EmailTemplateReferenceDto"
              }
            ],
            "nullable": true
          },
          "abandonedCartEmailTemplate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmailTemplateDto"
              },
              {
                "$ref": "#/components/schemas/EmailTemplateNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/EmailTemplateReferenceDto"
              }
            ],
            "nullable": true
          },
          "abandonedCartInactivityPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "abandonedCartLandingPageUrl": {
            "type": "string",
            "nullable": true
          },
          "cartNumberTemplate": {
            "type": "string",
            "nullable": true
          },
          "orderNumberTemplate": {
            "type": "string",
            "nullable": true
          },
          "orderRoundingMethod": {
            "$ref": "#/components/schemas/OrderRoundingMethod"
          },
          "productPropertyAliases": {
            "type": "string",
            "nullable": true
          },
          "productUniquenessPropertyAliases": {
            "type": "string",
            "nullable": true
          },
          "giftCardCodeLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "giftCardDaysValid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "giftCardCodeTemplate": {
            "type": "string",
            "nullable": true
          },
          "giftCardPropertyAliases": {
            "type": "string",
            "nullable": true
          },
          "giftCardActivationMethod": {
            "$ref": "#/components/schemas/GiftCardActivationMethod"
          },
          "giftCardActivationOrderStatus": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrderStatusDto"
              },
              {
                "$ref": "#/components/schemas/OrderStatusNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/OrderStatusReferenceDto"
              }
            ],
            "nullable": true
          },
          "defaultGiftCardEmailTemplate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmailTemplateDto"
              },
              {
                "$ref": "#/components/schemas/EmailTemplateNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/EmailTemplateReferenceDto"
              }
            ],
            "nullable": true
          },
          "allowedUsers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "allowedUserRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "logoImageUrl": {
            "type": "string",
            "nullable": true
          },
          "themeColor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoreNamedReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoreReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "StoreStatsDto": {
        "required": [
          "allTimeTotalOrders",
          "allTimeTotalRevenue",
          "totalAuthorizedOrders",
          "totalCapturedOrders",
          "totalErroredOrders",
          "totalNewOrders",
          "totalOrders",
          "totalRefundedOrders",
          "totalRevenue"
        ],
        "type": "object",
        "properties": {
          "allTimeTotalRevenue": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AmountDto"
              }
            ]
          },
          "allTimeTotalOrders": {
            "type": "integer",
            "format": "int64"
          },
          "totalRevenue": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AmountDto"
              }
            ]
          },
          "totalOrders": {
            "type": "integer",
            "format": "int64"
          },
          "totalNewOrders": {
            "type": "integer",
            "format": "int64"
          },
          "totalAuthorizedOrders": {
            "type": "integer",
            "format": "int64"
          },
          "totalCapturedOrders": {
            "type": "integer",
            "format": "int64"
          },
          "totalRefundedOrders": {
            "type": "integer",
            "format": "int64"
          },
          "totalErroredOrders": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "StoreStatsRequestDto": {
        "required": [
          "date"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "localTimezoneOffset": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxCalculationMethodDto": {
        "required": [
          "alias",
          "id",
          "salesTaxProviderAlias"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "salesTaxProviderAlias": {
            "type": "string"
          },
          "salesTaxProviderSettings": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxCalculationMethodNamedReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxCalculationMethodReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TaxClassDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StoreBasicDto"
              },
              {
                "$ref": "#/components/schemas/StoreDto"
              },
              {
                "$ref": "#/components/schemas/StoreNamedReferenceDto"
              },
              {
                "$ref": "#/components/schemas/StoreReferenceDto"
              }
            ],
            "nullable": true
          },
          "defaultTaxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "defaultTaxCode": {
            "type": "string",
            "nullable": true
          },
          "countryRegionTaxClasses": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CountryRegionTaxClassDto"
                }
              ]
            },
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxClassNamedReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxClassReferenceDto": {
        "required": [
          "alias",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "alias": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TemplateCategory": {
        "enum": [
          "Order",
          "GiftCard",
          "Discount",
          "Cart",
          "Custom"
        ],
        "type": "string"
      },
      "TransactionActivityDto": {
        "required": [
          "id",
          "paymentStatus"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "transactionId": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AmountDto"
              }
            ],
            "nullable": true
          },
          "fee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AmountDto"
              }
            ],
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "dateTimeUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentStatus": {
            "type": "string"
          },
          "metaData": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TranslatedValueDto": {
        "required": [
          "alias"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TranslatedValueRequestDto": {
        "required": [
          "alias",
          "defaultValue"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "defaultValue": {
            "type": "string"
          },
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateBillingRequestDto": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "region": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "companyTaxCode": {
            "type": "string",
            "nullable": true
          },
          "contact": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UpdateContactRequestDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateBundlableCartLineRequestDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "productReference": {
            "type": "string",
            "nullable": true
          },
          "productVariantReference": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "bundleId": {
            "type": "string",
            "nullable": true
          },
          "orderLines": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/UpdateCartLineRequestDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateBundlableOrderLineRequestDto": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "bundleId": {
            "type": "string",
            "nullable": true
          },
          "orderLines": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/UpdateOrderLineRequestDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCartLineRequestDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "productReference": {
            "type": "string",
            "nullable": true
          },
          "productVariantReference": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCartPaymentRequestDto": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCartRequestDto": {
        "type": "object",
        "properties": {
          "customer": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UpdateCustomerRequestDto"
              }
            ],
            "nullable": true
          },
          "billing": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UpdateBillingRequestDto"
              }
            ],
            "nullable": true
          },
          "shipping": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UpdateCartShippingRequestDto"
              }
            ],
            "nullable": true
          },
          "payment": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UpdateCartPaymentRequestDto"
              }
            ],
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "orderLines": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/UpdateBundlableCartLineRequestDto"
                }
              ]
            },
            "nullable": true
          },
          "notes": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UpdateNotesRequestDto"
              }
            ],
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "codes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCartShippingRequestDto": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "region": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "companyTaxCode": {
            "type": "string",
            "nullable": true
          },
          "contact": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UpdateContactRequestDto"
              }
            ],
            "nullable": true
          },
          "sameAsBilling": {
            "type": "boolean",
            "nullable": true
          },
          "shippingMethod": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "shippingOption": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShippingOptionDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateContactRequestDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCountryRequestDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "taxCalculationMethod": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "defaultCurrency": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "defaultPaymentMethod": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "defaultShippingMethod": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCurrencyRequestDto": {
        "required": [
          "allowedCountries",
          "code",
          "culture",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "culture": {
            "type": "string"
          },
          "formatTemplate": {
            "type": "string",
            "nullable": true
          },
          "allowedCountries": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AllowedCountryRequestDto"
                }
              ]
            }
          }
        },
        "additionalProperties": false
      },
      "UpdateCustomerRequestDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "nullable": true
          },
          "customerReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateDictionaryItemRequestDto": {
        "required": [
          "name",
          "translations"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DictionaryItemTranslationDto"
                }
              ]
            }
          }
        },
        "additionalProperties": false
      },
      "UpdateDiscountRequestDto": {
        "required": [
          "alias",
          "blockFurtherDiscounts",
          "blockIfPreviousDiscounts",
          "isActive",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/DiscountType"
          },
          "codes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DiscountCodeDto"
                }
              ]
            },
            "nullable": true
          },
          "rules": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DiscountRuleConfigDto"
              }
            ],
            "nullable": true
          },
          "rewards": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DiscountRewardConfigDto"
                }
              ]
            },
            "nullable": true
          },
          "blockFurtherDiscounts": {
            "type": "boolean"
          },
          "blockIfPreviousDiscounts": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateEmailTemplateRequestDto": {
        "required": [
          "alias",
          "category",
          "senderAddress",
          "senderName",
          "sendToCustomer",
          "subject"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/TemplateCategory"
          },
          "subject": {
            "type": "string"
          },
          "senderName": {
            "type": "string"
          },
          "senderAddress": {
            "type": "string"
          },
          "replyToAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "toAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ccAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "bccAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "sendToCustomer": {
            "type": "boolean"
          },
          "templateView": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateExportTemplateRequestDto": {
        "required": [
          "alias",
          "category",
          "exportStrategy",
          "fileExtension",
          "fileMimeType",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/TemplateCategory"
          },
          "fileMimeType": {
            "type": "string"
          },
          "fileExtension": {
            "type": "string"
          },
          "exportStrategy": {
            "$ref": "#/components/schemas/ExportStrategy"
          },
          "templateView": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateGiftCardRequestDto": {
        "required": [
          "code",
          "currency",
          "isActive",
          "originalAmount"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "currency": {
            "oneOf": [
              {
                "type": "string"
              }
            ]
          },
          "originalAmount": {
            "type": "number",
            "format": "double"
          },
          "remainingAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateLocationRequestDto": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "countryIsoCode": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/LocationType"
          }
        },
        "additionalProperties": false
      },
      "UpdateNotesRequestDto": {
        "type": "object",
        "properties": {
          "customerNotes": {
            "type": "string",
            "nullable": true
          },
          "internalNotes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateOrderLineRequestDto": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateOrderRequestDto": {
        "type": "object",
        "properties": {
          "orderStatus": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "customer": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UpdateCustomerRequestDto"
              }
            ],
            "nullable": true
          },
          "billing": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UpdateBillingRequestDto"
              }
            ],
            "nullable": true
          },
          "shipping": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UpdateShippingRequestDto"
              }
            ],
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "orderLines": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/UpdateBundlableOrderLineRequestDto"
                }
              ]
            },
            "nullable": true
          },
          "notes": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UpdateNotesRequestDto"
              }
            ],
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateOrderStatusRequestDto": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatePaymentMethodRequestDto": {
        "required": [
          "alias",
          "name",
          "paymentProviderAlias"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "taxClass": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "paymentProviderAlias": {
            "type": "string"
          },
          "paymentProviderSettings": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "enabledFeatures": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentProviderFeaturesDto"
              }
            ],
            "nullable": true
          },
          "allowedCountryRegions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AllowedCountryRegionRequestDto"
                }
              ]
            },
            "nullable": true
          },
          "prices": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ServicePriceRequestDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatePrintTemplateRequestDto": {
        "required": [
          "alias",
          "category",
          "name"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/TemplateCategory"
          },
          "templateView": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProductAttributePresetRequestDto": {
        "required": [
          "alias",
          "attributes",
          "name"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "additionalProperties": false
      },
      "UpdateProductAttributeRequestDto": {
        "required": [
          "attribute",
          "values"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TranslatedValueRequestDto"
              }
            ]
          },
          "values": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TranslatedValueRequestDto"
                }
              ]
            }
          }
        },
        "additionalProperties": false
      },
      "UpdateProductRequestDto": {
        "type": "object",
        "properties": {
          "stockIncrement": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "stockDecrement": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "stock": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateRegionRequestDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "defaultPaymentMethod": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "defaultShippingMethod": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateShippingMethodRequestDto": {
        "required": [
          "alias",
          "calculationMode",
          "name",
          "shippingProviderAlias"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "taxClass": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "imageId": {
            "type": "string",
            "nullable": true
          },
          "shippingProviderAlias": {
            "type": "string"
          },
          "calculationMode": {
            "type": "string"
          },
          "shippingProviderSettings": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "allowedCountryRegions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AllowedCountryRegionRequestDto"
                }
              ]
            },
            "nullable": true
          },
          "calculationConfig": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DynamicRateShippingCalculationConfigRequestDto"
              },
              {
                "$ref": "#/components/schemas/FixedRateShippingCalculationConfigRequestDto"
              },
              {
                "$ref": "#/components/schemas/RealtimeRateShippingCalculationConfigRequestDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateShippingRequestDto": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "region": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "companyTaxCode": {
            "type": "string",
            "nullable": true
          },
          "contact": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UpdateContactRequestDto"
              }
            ],
            "nullable": true
          },
          "sameAsBilling": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStoreRequestDto": {
        "required": [
          "abandonedCartInactivityPeriod",
          "alias",
          "canRefundTransactionFee",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "baseCurrency": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "defaultLocation": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "defaultCountry": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "defaultTaxClass": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "defaultOrderStatus": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "errorOrderStatus": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "measurementSystem": {
            "type": "string",
            "nullable": true
          },
          "pricesIncludeTax": {
            "type": "boolean",
            "nullable": true
          },
          "canRefundTransactionFee": {
            "type": "boolean"
          },
          "useCookies": {
            "type": "boolean",
            "nullable": true
          },
          "cookieTimeout": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "confirmationEmailTemplate": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "errorEmailTemplate": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "abandonedCartEmailTemplate": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "abandonedCartInactivityPeriod": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "abandonedCartLandingPageUrl": {
            "type": "string",
            "nullable": true
          },
          "cartNumberTemplate": {
            "type": "string",
            "nullable": true
          },
          "orderNumberTemplate": {
            "type": "string",
            "nullable": true
          },
          "orderRoundingMethod": {
            "type": "string",
            "nullable": true
          },
          "productPropertyAliases": {
            "type": "string",
            "nullable": true
          },
          "productUniquenessPropertyAliases": {
            "type": "string",
            "nullable": true
          },
          "giftCardCodeLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "giftCardDaysValid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "giftCardCodeTemplate": {
            "type": "string",
            "nullable": true
          },
          "giftCardPropertyAliases": {
            "type": "string",
            "nullable": true
          },
          "giftCardActivationMethod": {
            "type": "string",
            "nullable": true
          },
          "giftCardActivationOrderStatus": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "defaultGiftCardEmailTemplate": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "allowedUsers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "allowedUserRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "logoImageUrl": {
            "type": "string",
            "nullable": true
          },
          "themeColor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTaxCalculationMethodRequestDto": {
        "required": [
          "alias",
          "name",
          "salesTaxProviderAlias"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "salesTaxProviderAlias": {
            "type": "string"
          },
          "salesTaxProviderSettings": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTaxClassRequestDto": {
        "required": [
          "alias",
          "name"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "defaultTaxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "defaultTaxCode": {
            "type": "string",
            "nullable": true
          },
          "countryRegionTaxClasses": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CountryRegionTaxClassRequestDto"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserSessionDto": {
        "required": [
          "stores"
        ],
        "type": "object",
        "properties": {
          "stores": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/StoreClaimsDto"
                }
              ]
            }
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Backoffice User": {
        "type": "oauth2",
        "description": "Umbraco Authentication",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/umbraco/management/api/v1/security/back-office/authorize",
            "tokenUrl": "/umbraco/management/api/v1/security/back-office/token",
            "scopes": { }
          }
        }
      }
    }
  }
}